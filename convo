import tkinter as tk
from tkinter import filedialog, messagebox
import shutil
import os
import zipfile
from progress.bar import Bar
import threading

class FolderCompressor(tk.Tk):
    def __init__(self):
        super().__init__()
        self.title("Folder Compressor")
        self.geometry("400x200")

        self.label = tk.Label(self, text="Drop a folder to compress", pady=20)
        self.label.pack()

        self.progress = tk.DoubleVar()
        self.progress_bar = tk.ttk.Progressbar(self, variable=self.progress, maximum=100)
        self.progress_bar.pack(pady=20, fill=tk.X, padx=20)

        self.compress_button = tk.Button(self, text="Select Folder", command=self.select_folder)
        self.compress_button.pack(pady=20)

        self.folder_path = ""

    def select_folder(self):
        folder_selected = filedialog.askdirectory()
        if folder_selected:
            self.folder_path = folder_selected
            self.start_compression()

    def start_compression(self):
        thread = threading.Thread(target=self.compress_folder)
        thread.start()

    def compress_folder(self):
        if not self.folder_path:
            return

        folder_name = os.path.basename(self.folder_path)
        zip_filename = f"{folder_name}.zip"

        file_count = sum([len(files) for r, d, files in os.walk(self.folder_path)])
        bar = Bar('Compressing', max=file_count)

        with zipfile.ZipFile(zip_filename, 'w', zipfile.ZIP_DEFLATED) as zipf:
            for root, dirs, files in os.walk(self.folder_path):
                for file in files:
                    full_path = os.path.join(root, file)
                    arcname = os.path.relpath(full_path, self.folder_path)
                    zipf.write(full_path, arcname)
                    bar.next()
                    self.progress.set((bar.index / file_count) * 100)
                    self.update_idletasks()
        bar.finish()

        messagebox.showinfo("Success", "Folder compressed successfully!")
        os.startfile(zip_filename)
        self.progress.set(0)

if __name__ == "__main__":
    app = FolderCompressor()
    app.mainloop()
